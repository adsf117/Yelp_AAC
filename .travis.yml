language: android
sudo: required
jdk: oraclejdk8

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

env:
  global:
    - ANDROID_API=25
    - EMULATOR_API=21
    - ANDROID_BUILD_TOOLS=27.0.3
    - ADB_INSTALL_TIMEOUT=5 # minutes
    - EMULATOR_API=25
    - ANDROID_TARGET=android-22
    - ANDROID_ABI=armeabi-v7a
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    # - tools
    # - platform-tools

    # The BuildTools version used by your project
    - build-tools-26.0.2

    # The SDK version used to compile your project
    - android-26

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-x86-android-26
    - sys-img-armeabi-v7a-android-17
  licenses:
    - 'android-sdk-preview-license-52d11cd2'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'
    -
    # Emulator Management: Create, Start and Wait
before_script:
  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a -c 100M
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
  - adb shell settings put global window_animation_scale 0.0
  - adb shell settings put global transition_animation_scale 0.0
  - adb shell settings put global animator_duration_scale 0.0

before_install:
  - mkdir "$ANDROID_HOME/licenses" || true
  - cp ./android-sdk-licenses/* "$ANDROID_HOME/licenses/"
  - chmod +x gradlew
  - ./gradlew dependencies || true

script:
  - ./gradlew ktlint
  - echo "Building app"
  - android-wait-for-emulator
  - adb devices   #Display list of devices
  - ./gradlew clean assemble testDebugUnitTestCoverage

after_success:
  - bash <(curl -s https://codecov.io/bash)